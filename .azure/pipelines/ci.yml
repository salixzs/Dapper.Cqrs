# Dapper.CQRS CI build

name: $(Date:yyyy\-MM\-dd)_Dapper_CQRS_CI_$(SourceBranchName)_$(Rev:r)
trigger:
  branches:
   include:
     - main
  paths:
   exclude:
     - .azure
     - FileTemplates
     - Samples
     - README.md

jobs:
- job: Dapper_CQRS_CI
  timeoutInMinutes: 12
  workspace:
    clean: all
  pool:
    vmImage: windows-latest

  variables:
    buildConfiguration: 'Release'
    buildPlatform: 'any cpu'

  steps:
  - checkout: self
    clean: false
    fetchDepth: 1

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.9.x'
    inputs:
      versionSpec: '5.9.x'
  
  - task: NuGetCommand@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'
      restoreSolution: 'Salix.Dapper.Cqrs.sln'
      includeNuGetOrg: true
      verbosityRestore: 'Normal'

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: 'Salix.Dapper.Cqrs.sln'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      clean: true
      maximumCpuCount: true
      msbuildArgs: '/p:OutputPath="$(Build.BinariesDirectory)"'

  - task: VSTest@2
    displayName: 'Unit tests'
    inputs:
      testRunTitle: 'Unit-tests'
      searchFolder: '$(Build.BinariesDirectory)'
      testAssemblyVer2: |
        *.Tests.dll         
        !**\obj\**
        !**\xunit.runner.visualstudio.testadapter.dll
        !**\xunit.runner.visualstudio.dotnetcore.testadapter.dll
      runTestsInIsolation: true
      runInParallel: true
      rerunFailedTests: true
      rerunType: 'basedOnTestFailureCount'
      rerunFailedThreshold: 10
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      codeCoverageEnabled: true
